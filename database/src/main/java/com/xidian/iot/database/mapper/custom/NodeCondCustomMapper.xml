<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xidian.iot.database.mapper.custom.NodeCondCustomMapper">
    <select id="getNcIdsByNtId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select nc.nc_id from node_cond nc where nc.nt_id=#{ntId,jdbcType=BIGINT};
    </select>
    <!-- 连接查询，尽量不用 -->
    <select id="getNcIdsAvlBySn" parameterType="java.lang.String" resultType="java.lang.Long">
        select nc.nc_id from node_cond nc left join node_trig nt
        where nt.nt_exec=0 and nt.nt_expr>now()
        and nc.scene_sn=#{sceneSn,jdbcType=VARCHAR}
        and nc.node_sn=#{nodeSn,jdbcType=VARCHAR};
    </select>
    <select id="getNcIdsBySn" parameterType="java.lang.String" resultType="java.lang.Long">
        select nc.nc_id from node_cond nc
        where nc.scene_sn=#{sceneSn,jdbcType=VARCHAR}
        and nc.node_sn=#{nodeSn,jdbcType=VARCHAR};
    </select>
    <select id="getNcIdsBySceneSn" parameterType="java.lang.String" resultType="java.lang.Long">
        select nc.nc_id from node_cond nc
        where nc.scene_sn=#{sceneSn,jdbcType=VARCHAR}
    </select>
    <insert id="addBatch" parameterType="java.util.List">
        insert into node_cond (nc_id, na_id, nt_id, nc_op, nc_val, node_sn, scene_sn, nc_fit_time)
        values
        <foreach collection="ncs" item="nc" separator=",">
            (#{nc.ncId,jdbcType=BIGINT}, #{nc.naId,jdbcType=BIGINT}, #{nc.ntId,jdbcType=BIGINT},
            #{nc.ncOp,jdbcType=TINYINT}, #{nc.ncVal,jdbcType=VARCHAR}, #{nc.nodeSn,jdbcType=VARCHAR},
            #{nc.sceneSn,jdbcType=VARCHAR}, #{nc.ncFitTime,jdbcType=INTEGER})
        </foreach>
    </insert>
    <select id="getNcIdsByNaIds" parameterType="java.util.List" resultType="java.lang.Long">
        select nc.nc_id from node_cond nc
        where nc.na_id in
        <foreach collection="naIds" item="naId" index="index" open="(" separator="," close=")">
            #{naId,jdbcType=BIGINT}
        </foreach>
    </select>
    <delete id="delBatchsByNcIds">
        delete from node_cond nc
        where nc.nc_id in
        <foreach collection="ncIds" item="ncId" index="index" open="(" separator="," close=")">
            #{ncId,jdbcType=BIGINT}
        </foreach>
    </delete>
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="ncs" item="nc" separator=",">
            update node_cond
            set
            na_id = #{nc.naId,jdbcType=BIGINT},
            nt_id = #{nc.ntId,jdbcType=BIGINT},
            nc_op = #{nc.ncOp,jdbcType=TINYINT},
            nc_val = #{nc.ncVal,jdbcType=VARCHAR},
            node_sn = #{nc.nodeSn,jdbcType=VARCHAR},
            scene_sn = #{nc.sceneSn,jdbcType=VARCHAR},
            nc_fit_time = #{nc.ncFitTime,jdbcType=INTEGER}
            where nc_id = #{nc.ncId,jdbcType=BIGINT}
        </foreach>
    </update>

</mapper>