<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xidian.iot.database.mapper.NodeTrigMapper">
  <resultMap id="BaseResultMap" type="com.xidian.iot.database.entity.NodeTrig">
    <id column="nt_id" jdbcType="BIGINT" property="ntId" />
    <result column="nt_name" jdbcType="VARCHAR" property="ntName" />
    <result column="nt_desc" jdbcType="VARCHAR" property="ntDesc" />
    <result column="node_id" jdbcType="BIGINT" property="nodeId" />
    <result column="nt_invl" jdbcType="INTEGER" property="ntInvl" />
    <result column="nt_rept" jdbcType="TINYINT" property="ntRept" />
    <result column="nt_exec" jdbcType="TINYINT" property="ntExec" />
    <result column="nt_expr" jdbcType="TIMESTAMP" property="ntExpr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nt_id, nt_name, nt_desc, node_id, nt_invl, nt_rept, nt_exec, nt_expr
  </sql>
  <select id="selectByExample" parameterType="com.xidian.iot.database.entity.NodeTrigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from node_trig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node_trig
    where nt_id = #{ntId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from node_trig
    where nt_id = #{ntId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xidian.iot.database.entity.NodeTrigExample">
    delete from node_trig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xidian.iot.database.entity.NodeTrig">
    insert into node_trig (nt_id, nt_name, nt_desc, 
      node_id, nt_invl, nt_rept, 
      nt_exec, nt_expr)
    values (#{ntId,jdbcType=BIGINT}, #{ntName,jdbcType=VARCHAR}, #{ntDesc,jdbcType=VARCHAR}, 
      #{nodeId,jdbcType=BIGINT}, #{ntInvl,jdbcType=INTEGER}, #{ntRept,jdbcType=TINYINT}, 
      #{ntExec,jdbcType=TINYINT}, #{ntExpr,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xidian.iot.database.entity.NodeTrig">
    insert into node_trig
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ntId != null">
        nt_id,
      </if>
      <if test="ntName != null">
        nt_name,
      </if>
      <if test="ntDesc != null">
        nt_desc,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="ntInvl != null">
        nt_invl,
      </if>
      <if test="ntRept != null">
        nt_rept,
      </if>
      <if test="ntExec != null">
        nt_exec,
      </if>
      <if test="ntExpr != null">
        nt_expr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ntId != null">
        #{ntId,jdbcType=BIGINT},
      </if>
      <if test="ntName != null">
        #{ntName,jdbcType=VARCHAR},
      </if>
      <if test="ntDesc != null">
        #{ntDesc,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="ntInvl != null">
        #{ntInvl,jdbcType=INTEGER},
      </if>
      <if test="ntRept != null">
        #{ntRept,jdbcType=TINYINT},
      </if>
      <if test="ntExec != null">
        #{ntExec,jdbcType=TINYINT},
      </if>
      <if test="ntExpr != null">
        #{ntExpr,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xidian.iot.database.entity.NodeTrigExample" resultType="java.lang.Long">
    select count(*) from node_trig
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node_trig
    <set>
      <if test="record.ntId != null">
        nt_id = #{record.ntId,jdbcType=BIGINT},
      </if>
      <if test="record.ntName != null">
        nt_name = #{record.ntName,jdbcType=VARCHAR},
      </if>
      <if test="record.ntDesc != null">
        nt_desc = #{record.ntDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=BIGINT},
      </if>
      <if test="record.ntInvl != null">
        nt_invl = #{record.ntInvl,jdbcType=INTEGER},
      </if>
      <if test="record.ntRept != null">
        nt_rept = #{record.ntRept,jdbcType=TINYINT},
      </if>
      <if test="record.ntExec != null">
        nt_exec = #{record.ntExec,jdbcType=TINYINT},
      </if>
      <if test="record.ntExpr != null">
        nt_expr = #{record.ntExpr,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node_trig
    set nt_id = #{record.ntId,jdbcType=BIGINT},
      nt_name = #{record.ntName,jdbcType=VARCHAR},
      nt_desc = #{record.ntDesc,jdbcType=VARCHAR},
      node_id = #{record.nodeId,jdbcType=BIGINT},
      nt_invl = #{record.ntInvl,jdbcType=INTEGER},
      nt_rept = #{record.ntRept,jdbcType=TINYINT},
      nt_exec = #{record.ntExec,jdbcType=TINYINT},
      nt_expr = #{record.ntExpr,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xidian.iot.database.entity.NodeTrig">
    update node_trig
    <set>
      <if test="ntName != null">
        nt_name = #{ntName,jdbcType=VARCHAR},
      </if>
      <if test="ntDesc != null">
        nt_desc = #{ntDesc,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="ntInvl != null">
        nt_invl = #{ntInvl,jdbcType=INTEGER},
      </if>
      <if test="ntRept != null">
        nt_rept = #{ntRept,jdbcType=TINYINT},
      </if>
      <if test="ntExec != null">
        nt_exec = #{ntExec,jdbcType=TINYINT},
      </if>
      <if test="ntExpr != null">
        nt_expr = #{ntExpr,jdbcType=TIMESTAMP},
      </if>
    </set>
    where nt_id = #{ntId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xidian.iot.database.entity.NodeTrig">
    update node_trig
    set nt_name = #{ntName,jdbcType=VARCHAR},
      nt_desc = #{ntDesc,jdbcType=VARCHAR},
      node_id = #{nodeId,jdbcType=BIGINT},
      nt_invl = #{ntInvl,jdbcType=INTEGER},
      nt_rept = #{ntRept,jdbcType=TINYINT},
      nt_exec = #{ntExec,jdbcType=TINYINT},
      nt_expr = #{ntExpr,jdbcType=TIMESTAMP}
    where nt_id = #{ntId,jdbcType=BIGINT}
  </update>
</mapper>