<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:conf/kafka-def.properties" ignore-unresolvable="true"/>

    <!-- 定义producer的参数 -->
    <bean id="producerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="${kafka.bootstrap.servers}" />
                <entry key="group.id" value="${kafka.group.id}" />
                <entry key="retries" value="${kafka.retries}" />
                <entry key="batch.size" value="${kafka.batch.size}" />
                <entry key="linger.ms" value="${kafka.linger.ms}" />
                <entry key="buffer.memory" value="${kafka.buffer.memory}" />
<!--                <entry key="key.serializer"-->
<!--                       value="org.apache.kafka.common.serialization.StringSerializer" />-->
<!--                <entry key="value.serializer"-->
<!--                       value="org.apache.kafka.common.serialization.StringSerializer" />-->
            </map>
        </constructor-arg>
    </bean>

    <!-- 创建kafkatemplate需要使用的producerfactory bean -->
    <bean id="strProducerFactory"
          class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg index="0">
            <ref bean="producerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringSerializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.apache.kafka.common.serialization.StringSerializer"/>
        </constructor-arg>
    </bean>
    <bean id="objProducerFactory"
          class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg index="0">
            <ref bean="producerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringSerializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="com.xidian.iot.common.mq.kafka.codec.EncodeingKafka"/>
        </constructor-arg>
    </bean>
    <bean id="byteProducerFactory"
          class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg index="0">
            <ref bean="producerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringSerializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.apache.kafka.common.serialization.ByteArraySerializer"/>
        </constructor-arg>
    </bean>

    <!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
    <bean id="strKafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="strProducerFactory" />
        <constructor-arg name="autoFlush" value="true" />
    </bean>
    <bean id="objKafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="objProducerFactory" />
        <constructor-arg name="autoFlush" value="true" />
    </bean>
    <bean id="byteKafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="byteProducerFactory" />
        <constructor-arg name="autoFlush" value="true" />
    </bean>

    <bean id="mqSender" class="com.xidian.iot.common.mq.kafka.KafkaSender">
        <property name="strKafkaTemplate" ref="strKafkaTemplate"/>
        <property name="objKafkaTemplate" ref="objKafkaTemplate"/>
        <property name="byteKafkaTemplate" ref="byteKafkaTemplate"/>
    </bean>
</beans>