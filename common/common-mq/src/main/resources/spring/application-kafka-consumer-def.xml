<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:conf/kafka-def.properties" ignore-unresolvable="true"/>

    <!-- 定义consumer的参数 -->
    <bean id="consumerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="${bootstrap.servers}" />
                <entry key="group.id" value="${group.id}" />
                <entry key="enable.auto.commit" value="${enable.auto.commit}" />
                <entry key="auto.commit.interval.ms" value="${auto.commit.interval.ms}" />
                <entry key="session.timeout.ms" value="${session.timeout.ms}" />
<!--                <entry key="key.deserializer"-->
<!--                       value="org.apache.kafka.common.serialization.StringDeserializer" />-->
<!--                <entry key="value.deserializer"-->
<!--                       value="org.apache.kafka.common.serialization.StringDeserializer" />-->
            </map>
        </constructor-arg>
    </bean>

    <!-- 创建consumerFactory bean -->
    <bean id="strConsumerFactory"
          class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="consumerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringDeserializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.apache.kafka.common.serialization.StringDeserializer"/>
        </constructor-arg>
    </bean>
    <bean id="objConsumerFactory"
          class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="consumerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringDeserializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="com.xidian.iot.common.mq.kafka.codec.DecodeingKafka"/>
        </constructor-arg>
    </bean>
    <bean id="byteConsumerFactory"
          class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="consumerProperties" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.apache.kafka.common.serialization.StringDeserializer"/>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.apache.kafka.common.serialization.ByteArrayDeserializer"/>
        </constructor-arg>
    </bean>








    <!-- 实际执行消息消费的类 -->
    <bean id="messageListener" class="com.xidian.iot.common.mq.kafka.listener.TestStrConsumerListener" />

    <!-- 消费者容器配置信息 -->
    <bean id="containerProperties"
          class="org.springframework.kafka.listener.ContainerProperties">
        <constructor-arg>
            <array>
                <value>test</value> <!-- 配置topic -->
                <value>hello_topic</value>
            </array>
        </constructor-arg>
        <property name="messageListener" ref="messageListener" />
    </bean>

    <!-- 创建messageListenerContainer bean，使用的时候，只需要注入这个bean -->
    <bean id="messageListenerContainer"
          class="org.springframework.kafka.listener.KafkaMessageListenerContainer"
          init-method="doStart">
        <constructor-arg ref="strConsumerFactory" />
        <constructor-arg ref="containerProperties" />
    </bean>

</beans>