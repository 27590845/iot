version: '3'

services:

  mysql-iot:
    image: mysql
    container_name: mysql-iot
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app_net
    volumes:
      # 数据库
      - ./docker/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: xidian@123
      MYSQL_DATABASE: iotdata

  redis-iot:
    # 指定镜像
    image: redis:latest
    container_name: redis-iot-master
    restart: always
    networks:
      - app_net
    command:
      # 执行的命令
      redis-server /etc/redis/redis.conf --appendonly yes
    volumes:
      - redisdata:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf

  #暂时不可以使用这种方式因为初始话
  mongo-iot:
    image: mongo
    container_name: mongodb-iot
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: xidian@123
      MONGO_INITDB_DATABASE: iotdata
    networks:
       - app_net
    volumes:
      - ./docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodata:/data/db

  dataapi:
    depends_on:
      - mysql-iot
      - redis-iot
      - mongo-iot
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: dataapi
    restart: always
    ports:
      - 8081:8081
    networks:
      - app_net
#  nginx:
#    image: nginx
#    container_name: show
#    depends_on:
#      - serv
#    restart: always
#    networks:
#      - app_net
#    ports:
#      - 8089:8089
#    volumes:
#      - ./docker/nginx:/etc/nginx/conf.d/
#      - ./dist:/usr/share/nginx/html/dist

networks:
  app_net:
    driver: bridge

volumes:
  redisdata:
  mongodata:



