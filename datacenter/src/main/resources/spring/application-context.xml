<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="com.xidian.iot"/>
    <context:annotation-config/>
    <context:property-placeholder location="classpath:conf/application.properties" ignore-unresolvable="true"/>

    <import resource="application-databiz.xml"/>
    <!-- mongo、redis已经包含在application-databiz.xml内 -->
    <!--    <import resource="application-mongo-def.xml"/>-->
    <!--    <import resource="application-redis-def.xml"/>-->
    <import resource="application-alert.xml"/>
    <!--  activemq已经包含在application-alert.xml内  -->
<!--    <import resource="application-activemq-def.xml"/>-->
<!--    <import resource="application-kafka-consumer-def.xml"/>-->
<!--    <import resource="application-kafka-producer-def.xml"/>-->
    <import resource="application-chain.xml"/>

    <bean id="getProp" class="com.xidian.iot.common.util.GetProps"/>

    <task:scheduled-tasks>
        <task:scheduled ref="reporter" method="report" cron="*/60 * * * * ?"/>
    </task:scheduled-tasks>

    <task:executor id="taskExecutor"
                   pool-size="${thread.pool.corePoolSize}-${thread.pool.maxPoolSize}"
                   queue-capacity="${thread.pool.queueCapacity}" />

<!--    <bean id="consoleMonitor" class="com.xidian.iot.common.monitor.catcher.ConsoleCatcher"-->
<!--          init-method="startConsoleReaderThread">-->
<!--        <property name="catchType" value="2"/>&lt;!&ndash; 只监控error级别的输出 &ndash;&gt;-->
<!--        <property name="listener">-->
<!--            <bean class="com.xidian.iot.datacenter.listener.MonitorListener"/>-->
<!--        </property>-->
<!--        <property name="parser">-->
<!--            <bean class="com.xidian.iot.common.monitor.parser.LogbackParser">-->
<!--                <constructor-arg value="${log.pattern}"/>-->
<!--            </bean>-->
<!--        </property>-->
<!--    </bean>-->

<!--    <bean id="messageListener" class="com.xidian.iot.datacenter.listener.UpdataListener"/>-->
<!--    <bean id="messageListenerContainer" factory-bean="messageListenerContainerFactory"-->
<!--          factory-method="getKafkaMessageListenerContainer" init-method="doStart">-->
<!--        <constructor-arg index="0" value="${strMessageFactory.type}"/>-->
<!--        <constructor-arg index="1" ref="messageListener"/>-->
<!--        <constructor-arg index="2">-->
<!--            <list>-->
<!--                <value>node.updata.186610102211000001</value>-->
<!--            </list>-->
<!--        </constructor-arg>-->
<!--    </bean>-->
    <!-- 监听类 -->
    <bean id="receive" class="com.xidian.iot.datacenter.listener.UpdataListener"/>
    <bean id="dataListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination">
            <bean class="org.apache.activemq.command.ActiveMQQueue">
                <constructor-arg><value>node.updata.*</value></constructor-arg>
            </bean>
        </property>
        <property name="messageListener" ref="receive" />
    </bean>

    <!-- 监听类 -->
    <bean id="receiveSL" class="com.xidian.iot.datacenter.listener.SiteLetterListener"/>
    <bean id="dataListenerSL" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination">
            <bean class="org.apache.activemq.command.ActiveMQTopic">
                <constructor-arg><value>SiteLetter</value></constructor-arg>
            </bean>
        </property>
        <property name="messageListener" ref="receiveSL" />
    </bean>


    <bean id="influxDBConnection" class="com.xidian.iot.common.influxdb.InfluxDBConnection">
        <constructor-arg index="0" value=""/>
        <constructor-arg index="1" value=""/>
        <constructor-arg index="2" value="${influx.url}"/>
        <constructor-arg index="3" value="${influx.database}"/>
        <constructor-arg index="4" value=""/>
    </bean>
</beans>
